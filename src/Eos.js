// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Eosjs = require("eosjs");
var Eos_Js = require("./Eos_Js.js");
var Eos_Api = require("./Eos_Api.js");
var Eos_Types = require("./Eos_Types.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");

function make(httpEndpoint, verbose, keyProvider, chainId, expireInSeconds, sign, broadcast, _) {
  var tmp = {
    httpEndpoint: httpEndpoint
  };
  if (verbose) {
    tmp.verbose = Js_primitive.valFromOption(verbose);
  }
  if (keyProvider) {
    tmp.keyProvider = Js_primitive.valFromOption(keyProvider);
  }
  if (chainId) {
    tmp.chainId = Js_primitive.valFromOption(chainId);
  }
  if (expireInSeconds) {
    tmp.expireInSeconds = Js_primitive.valFromOption(expireInSeconds);
  }
  if (sign) {
    tmp.sign = Js_primitive.valFromOption(sign);
  }
  if (broadcast) {
    tmp.broadcast = Js_primitive.valFromOption(broadcast);
  }
  var config = tmp;
  var eosjs = Eosjs(config);
  return /* record */[
          /* config */config,
          /* eosjs */eosjs
        ];
}

function getInfo(t) {
  return Eos_Js.getInfo(t[/* eosjs */1]);
}

function getTableRows(t, rowDecoder, code, scope, table, $staropt$star, tableKey, lowerBound, upperBound, limit, _) {
  var json = $staropt$star !== undefined ? $staropt$star : true;
  var partial_arg = Eos_Api.TableRows[/* decode */0];
  var tmp = {
    code: Eos_Types.AccountName[/* toString */4](code),
    scope: Eos_Types.AccountName[/* toString */4](scope),
    table: Eos_Types.TableName[/* toString */4](table),
    json: json
  };
  var tmp$1 = Belt_Option.map(tableKey, Eos_Types.TableName[/* toString */4]);
  if (tmp$1) {
    tmp.table_key = Js_primitive.valFromOption(tmp$1);
  }
  var tmp$2 = Belt_Option.map(lowerBound, (function (prim) {
          return prim.toString();
        }));
  if (tmp$2) {
    tmp.lower_bound = Js_primitive.valFromOption(tmp$2);
  }
  var tmp$3 = Belt_Option.map(upperBound, (function (prim) {
          return prim.toString();
        }));
  if (tmp$3) {
    tmp.upper_bound = Js_primitive.valFromOption(tmp$3);
  }
  if (limit) {
    tmp.limit = Js_primitive.valFromOption(limit);
  }
  return Eos_Api.thenDecode((function (param) {
                return partial_arg(rowDecoder, param);
              }), t[/* eosjs */1].getTableRows(tmp));
}

function getCode(t, accountName) {
  return Eos_Api.thenDecode(Eos_Api.Code[/* decode */0], t[/* eosjs */1].getCode(Eos_Types.AccountName[/* toString */4](accountName)));
}

var MakeOpaqueStringType = Eos_Types.MakeOpaqueStringType;

var MakeOpaqueIntType = Eos_Types.MakeOpaqueIntType;

var MakeChecksum256Type = Eos_Types.MakeChecksum256Type;

var MakeChecksum160Type = Eos_Types.MakeChecksum160Type;

var MakeChecksum512 = Eos_Types.MakeChecksum512;

var MakeNameType = Eos_Types.MakeNameType;

var AccountName = Eos_Types.AccountName;

var accountName = Eos_Types.accountName;

var PermissionName = Eos_Types.PermissionName;

var permissionName = Eos_Types.permissionName;

var TokenName = Eos_Types.TokenName;

var tokenName = Eos_Types.tokenName;

var TableName = Eos_Types.TableName;

var tableName = Eos_Types.tableName;

var ScopeName = Eos_Types.ScopeName;

var scopeName = Eos_Types.scopeName;

var ActionName = Eos_Types.ActionName;

var actionName = Eos_Types.actionName;

var TypeName = Eos_Types.TypeName;

var typeName = Eos_Types.typeName;

var MakeOpaqueDateType = Eos_Types.MakeOpaqueDateType;

var BlockTimestamp = Eos_Types.BlockTimestamp;

var PublicKey = Eos_Types.PublicKey;

var PrivateKey = Eos_Types.PrivateKey;

var Asset = Eos_Types.Asset;

var asset = Eos_Types.asset;

var MerkleRoot = Eos_Types.MerkleRoot;

var Signature = Eos_Types.Signature;

var BlockId = Eos_Types.BlockId;

var TransactionId = Eos_Types.TransactionId;

var AccountPermission = Eos_Types.AccountPermission;

var Api = 0;

exports.MakeOpaqueStringType = MakeOpaqueStringType;
exports.MakeOpaqueIntType = MakeOpaqueIntType;
exports.MakeChecksum256Type = MakeChecksum256Type;
exports.MakeChecksum160Type = MakeChecksum160Type;
exports.MakeChecksum512 = MakeChecksum512;
exports.MakeNameType = MakeNameType;
exports.AccountName = AccountName;
exports.accountName = accountName;
exports.PermissionName = PermissionName;
exports.permissionName = permissionName;
exports.TokenName = TokenName;
exports.tokenName = tokenName;
exports.TableName = TableName;
exports.tableName = tableName;
exports.ScopeName = ScopeName;
exports.scopeName = scopeName;
exports.ActionName = ActionName;
exports.actionName = actionName;
exports.TypeName = TypeName;
exports.typeName = typeName;
exports.MakeOpaqueDateType = MakeOpaqueDateType;
exports.BlockTimestamp = BlockTimestamp;
exports.PublicKey = PublicKey;
exports.PrivateKey = PrivateKey;
exports.Asset = Asset;
exports.asset = asset;
exports.MerkleRoot = MerkleRoot;
exports.Signature = Signature;
exports.BlockId = BlockId;
exports.TransactionId = TransactionId;
exports.AccountPermission = AccountPermission;
exports.Api = Api;
exports.make = make;
exports.getInfo = getInfo;
exports.getTableRows = getTableRows;
exports.getCode = getCode;
/* eosjs Not a pure module */
