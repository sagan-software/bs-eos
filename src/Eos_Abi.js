// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Eos_Types = require("./Eos_Types.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function type_(j) {
  return /* record */[
          /* newTypeName */Json_decode.field("new_type_name", Eos_Types.TypeName[/* decode */0], j),
          /* type_ */Json_decode.field("type", Eos_Types.TypeName[/* decode */0], j)
        ];
}

function structField(j) {
  return /* record */[
          /* name */Json_decode.field("name", Eos_Types.TypeName[/* decode */0], j),
          /* type_ */Json_decode.field("type", Eos_Types.TypeName[/* decode */0], j)
        ];
}

function struct_(j) {
  var partial_arg = Eos_Types.TypeName[/* decode */0];
  return /* record */[
          /* name */Json_decode.field("name", Eos_Types.TypeName[/* decode */0], j),
          /* base */Json_decode.optional((function (param) {
                  return Json_decode.field("base", partial_arg, param);
                }), j),
          /* fields */Json_decode.field("fields", (function (param) {
                  return Json_decode.array(structField, param);
                }), j)
        ];
}

function action(j) {
  return /* record */[
          /* name */Json_decode.field("name", Eos_Types.ActionName[/* decode */0], j),
          /* type_ */Json_decode.field("type", Eos_Types.TypeName[/* decode */0], j),
          /* ricardianContract */Belt_Option.getWithDefault(Json_decode.optional((function (param) {
                      return Json_decode.field("ricardian_contract", Json_decode.string, param);
                    }), j), "")
        ];
}

function table(j) {
  var partial_arg = Eos_Types.TypeName[/* decode */0];
  var partial_arg$1 = Eos_Types.TypeName[/* decode */0];
  return /* record */[
          /* name */Json_decode.field("name", Eos_Types.TableName[/* decode */0], j),
          /* type_ */Json_decode.field("type", Eos_Types.TypeName[/* decode */0], j),
          /* indexType */Json_decode.field("index_type", Eos_Types.TypeName[/* decode */0], j),
          /* keyNames */Json_decode.field("key_names", (function (param) {
                  return Json_decode.array(partial_arg, param);
                }), j),
          /* keyTypes */Json_decode.field("key_types", (function (param) {
                  return Json_decode.array(partial_arg$1, param);
                }), j)
        ];
}

function t(j) {
  return /* record */[
          /* comment */Belt_Option.getWithDefault(Json_decode.optional((function (param) {
                      return Json_decode.field("comment", Json_decode.string, param);
                    }), j), ""),
          /* version */Json_decode.optional((function (param) {
                  return Json_decode.field("version", Json_decode.string, param);
                }), j),
          /* structs */Json_decode.field("structs", (function (param) {
                  return Json_decode.array(struct_, param);
                }), j),
          /* actions */Json_decode.field("actions", (function (param) {
                  return Json_decode.array(action, param);
                }), j),
          /* tables */Json_decode.field("tables", (function (param) {
                  return Json_decode.array(table, param);
                }), j)
        ];
}

var Decode = /* module */[
  /* type_ */type_,
  /* structField */structField,
  /* struct_ */struct_,
  /* action */action,
  /* table */table,
  /* t */t
];

function type_$1(d) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "new_type_name",
                Eos_Types.TypeName[/* encode */1](d[/* newTypeName */0])
              ],
              /* :: */[
                /* tuple */[
                  "type",
                  Eos_Types.TypeName[/* encode */1](d[/* type_ */1])
                ],
                /* [] */0
              ]
            ]);
}

function structField$1(d) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                Eos_Types.TypeName[/* encode */1](d[/* name */0])
              ],
              /* :: */[
                /* tuple */[
                  "type",
                  Eos_Types.TypeName[/* encode */1](d[/* type_ */1])
                ],
                /* [] */0
              ]
            ]);
}

function struct_$1(d) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                Eos_Types.TypeName[/* encode */1](d[/* name */0])
              ],
              /* :: */[
                /* tuple */[
                  "base",
                  Belt_Option.getWithDefault(Belt_Option.map(d[/* base */1], Eos_Types.TypeName[/* encode */1]), null)
                ],
                /* :: */[
                  /* tuple */[
                    "fields",
                    Json_encode.array(structField$1, d[/* fields */2])
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function action$1(d) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                Eos_Types.ActionName[/* encode */1](d[/* name */0])
              ],
              /* :: */[
                /* tuple */[
                  "type",
                  Eos_Types.TypeName[/* encode */1](d[/* type_ */1])
                ],
                /* :: */[
                  /* tuple */[
                    "ricardian_contract",
                    d[/* ricardianContract */2]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function table$1(d) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                Eos_Types.TableName[/* encode */1](d[/* name */0])
              ],
              /* :: */[
                /* tuple */[
                  "type",
                  Eos_Types.TypeName[/* encode */1](d[/* type_ */1])
                ],
                /* :: */[
                  /* tuple */[
                    "index_type",
                    Eos_Types.TypeName[/* encode */1](d[/* indexType */2])
                  ],
                  /* :: */[
                    /* tuple */[
                      "key_names",
                      Json_encode.array(Eos_Types.TypeName[/* encode */1], d[/* keyNames */3])
                    ],
                    /* :: */[
                      /* tuple */[
                        "key_types",
                        Json_encode.array(Eos_Types.TypeName[/* encode */1], d[/* keyTypes */4])
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]);
}

function t$1(d) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "comment",
                d[/* comment */0]
              ],
              /* :: */[
                /* tuple */[
                  "version",
                  Belt_Option.getWithDefault(d[/* version */1], "")
                ],
                /* :: */[
                  /* tuple */[
                    "structs",
                    Json_encode.array(struct_$1, d[/* structs */2])
                  ],
                  /* :: */[
                    /* tuple */[
                      "actions",
                      Json_encode.array(action$1, d[/* actions */3])
                    ],
                    /* :: */[
                      /* tuple */[
                        "tables",
                        Json_encode.array(table$1, d[/* tables */4])
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]);
}

var Encode = /* module */[
  /* type_ */type_$1,
  /* structField */structField$1,
  /* struct_ */struct_$1,
  /* action */action$1,
  /* table */table$1,
  /* t */t$1
];

var decode = t;

var encode = t$1;

exports.Decode = Decode;
exports.decode = decode;
exports.Encode = Encode;
exports.encode = encode;
/* Eos_Types Not a pure module */
