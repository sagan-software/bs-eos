// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Eosjs = require("eosjs");
var Eos_Chain = require("./Eos_Chain.js");
var Eos_Types = require("./Eos_Types.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");

function make(httpEndpoint, verbose, keyProvider, chainId, expireInSeconds, sign, broadcast, _) {
  var tmp = {
    httpEndpoint: httpEndpoint
  };
  if (verbose) {
    tmp.verbose = Js_primitive.valFromOption(verbose);
  }
  if (keyProvider) {
    tmp.keyProvider = Js_primitive.valFromOption(keyProvider);
  }
  if (chainId) {
    tmp.chainId = Js_primitive.valFromOption(chainId);
  }
  if (expireInSeconds) {
    tmp.expireInSeconds = Js_primitive.valFromOption(expireInSeconds);
  }
  if (sign) {
    tmp.sign = Js_primitive.valFromOption(sign);
  }
  if (broadcast) {
    tmp.broadcast = Js_primitive.valFromOption(broadcast);
  }
  return Eosjs(tmp);
}

function thenDecode(decode, promise) {
  return promise.then((function (d) {
                return Promise.resolve(Curry._1(decode, d));
              }));
}

function getInfo(t) {
  return thenDecode(Eos_Chain.Info[/* decode */0], t.getInfo(true));
}

function getTableRows(t, rowDecoder, code, scope, table, $staropt$star, tableKey, lowerBound, upperBound, limit, _) {
  var json = $staropt$star !== undefined ? $staropt$star : true;
  var partial_arg = Eos_Chain.TableRows[/* decode */0];
  var tmp = {
    code: Eos_Types.AccountName[/* toString */4](code),
    scope: Eos_Types.AccountName[/* toString */4](scope),
    table: Eos_Types.TableName[/* toString */4](table),
    json: json
  };
  var tmp$1 = Belt_Option.map(tableKey, Eos_Types.TableName[/* toString */4]);
  if (tmp$1) {
    tmp.table_key = Js_primitive.valFromOption(tmp$1);
  }
  if (lowerBound) {
    tmp.lower_bound = Js_primitive.valFromOption(lowerBound);
  }
  if (upperBound) {
    tmp.upper_bound = Js_primitive.valFromOption(upperBound);
  }
  if (limit) {
    tmp.limit = Js_primitive.valFromOption(limit);
  }
  return thenDecode((function (param) {
                return partial_arg(rowDecoder, param);
              }), t.getTableRows(tmp));
}

function getTableSingleton(t, rowDecoder, code, scope, table, $staropt$star, _) {
  var json = $staropt$star !== undefined ? $staropt$star : true;
  return getTableRows(t, rowDecoder, code, scope, table, json, undefined, undefined, undefined, 1, /* () */0).then((function (tableRows) {
                return Promise.resolve(Belt_Array.get(tableRows[/* rows */0], 0));
              }));
}

function getCode(t, accountName) {
  return thenDecode(Eos_Chain.Code[/* decode */0], t.getCode(Eos_Types.AccountName[/* toString */4](accountName)));
}

exports.make = make;
exports.thenDecode = thenDecode;
exports.getInfo = getInfo;
exports.getTableRows = getTableRows;
exports.getTableSingleton = getTableSingleton;
exports.getCode = getCode;
/* eosjs Not a pure module */
